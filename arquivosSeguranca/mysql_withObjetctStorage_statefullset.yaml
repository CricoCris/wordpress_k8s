apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: YXZpczRAMTAyMCE=  # Base64 encoded
  MYSQL_DATABASE: YXZpc2FkZXNjb250bw==
  MYSQL_USER: YXZpc2FkZXNjb250bw==
  MYSQL_PASSWORD: YXZpczRAMTAyMEA=  # Base64 encoded
  MYSQL_TCP_PORT: NTkwMDE=  # Base64 encoded

---


apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-wp-teste
provisioner: ebs.csi.aws.com  # Provisionador para EBS no AWS EKS
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: gp3
  fsType: xfs

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: biarms/mysql:5.7          
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_TCP_PORT
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_TCP_PORT
          ports:
            - containerPort: 59001 # Pode ser alterado conforme necess√°rio
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql      
  volumeClaimTemplates:
    - metadata:
        name: mysql-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
        storageClassName: mysql-wp-teste

---


apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 59001
      targetPort: 3306
  type: ClusterIP # Pode ser LoadBalancer ou NodePort dependendo da necessidade de acesso externo

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mysql-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "mysql.avisadesconto.com.br"
    secretName: "mysql-tls"
  rules:
    - host: "mysql.avisadesconto.com.br"
      http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: mysql
              port:
                number: 59001
